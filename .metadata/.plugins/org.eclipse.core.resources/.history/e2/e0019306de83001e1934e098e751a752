package com.shoplaptop.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.shoplaptop.entity.Laptop;
import com.shoplaptop.utils.XJdbc;

public class LaptopDAO implements ShopLaptop365DAO<Laptop, String>{
	
	String selectAll_SQL = "SELECT dbo.Laptop.MaLaptop, TenLaptop, PhanLoai.TenLoai, Hang.TenHang, dbo.DongLaptop.TenDong, NamSanXuat FROM dbo.Laptop JOIN dbo.DongLaptop ON DongLaptop.ID = Laptop.DongLaptop JOIN dbo.Hang ON Hang.ID = DongLaptop.Hang JOIN dbo.PhanLoai ON PhanLoai.ID = Laptop.PhanLoai";
	String insertLaptop = "INSERT INTO Laptop(MaLaptop, TenLaptop, PhanLoai, DongLaptop, NamSanXuat) VALUES (?,?,?,?,?)";
	String updateLaptop = "UPDATE Laptop SET TenLaptop = ?, PhanLoai = ?, DongLaptop = ?, NamSanXuat = ? WHERE MaLaptop = ?";
	String deleteLaptop = "DELETE FROM Laptop WHERE MaLaptop = ?";
	String selectByID_SQL = "SELECT dbo.Laptop.MaLaptop, TenLaptop, PhanLoai.TenLoai, Hang.TenHang, dbo.DongLaptop.TenDong, NamSanXuat FROM dbo.Laptop JOIN dbo.DongLaptop ON DongLaptop.ID = Laptop.DongLaptop JOIN dbo.Hang ON Hang.ID = DongLaptop.Hang JOIN dbo.PhanLoai ON PhanLoai.ID = Laptop.PhanLoai WHERE MaLaptop = ?";
	String selectLaptop = "SELECT Laptop.ID, MaLaptop, TenLaptop, PhanLoai.ID, PhanLoai.Tenloai, Hang.ID, Hang.TenHang, DongLaptop.ID, DongLaptop.TenDong, NamSanXuat  FROM Laptop JOIN PhanLoai ON Laptop.PhanLoai = PhanLoai.ID JOIN DongLaptop ON Laptop.DongLaptop = DongLaptop.ID JOIN Hang ON Hang.ID = DongLaptop.Hang";
	
	@Override
	public String insert(Laptop laptop) {
		try {
			XJdbc.update(insertLaptop,  laptop.getMaLaptop(),  laptop.getTenLaptop(),  laptop.getPhanLoai(),  laptop.getDongLaptop(),  laptop.getNamSanXuat());
			return "Add thành công";
		} catch (SQLException e) {
			return "Add thất bại";
			
		}
	}

	@Override
	public String update(Laptop laptop) {
		try {
			XJdbc.update(insertLaptop,  laptop.getTenLaptop(),  laptop.getPhanLoai(),  laptop.getDongLaptop(),  laptop.getNamSanXuat(),  laptop.getMaLaptop());
			return "Update thành công";
		} catch (SQLException e) {
			return "Update thất bại";
			
		}
	}

	@Override
	public String delete(String string) {
		try {
			XJdbc.update(deleteLaptop,  string);
			return "Xóa thành công";
		} catch (SQLException e) {
			return "Xóa thất bại";
			
		}
	}

	@Override
	public Laptop selectById(String id) {
		List<Laptop> list = this.selectBySQL(selectByID_SQL, id);
		if (list.isEmpty()) {
			return null;
		}
		return list.get(0);
	}

	@Override
	public List<Laptop> selectAll() {
		return selectBySQL(selectAll_SQL);
	}
	
	@Override
	public List<Laptop> selectBySQL(String sql, Object... args) {
		List<Laptop> list = new ArrayList<Laptop>();
		try {
			ResultSet rs = XJdbc.query(sql, args);
			while (rs.next()) {
				Laptop laptop = new Laptop();
				laptop.setMaLaptop(rs.getString("MaLaptop"));
				laptop.setTenLaptop(rs.getString("TenLaptop"));
				laptop.setTenLoai(rs.getString("TenLoai"));
				laptop.setTenHang(rs.getString("TenHang"));
				laptop.setTenDong(rs.getString("TenDong"));
				laptop.setNamSanXuat(rs.getInt("NamSanXuat"));
				list.add(laptop);
			}
			rs.getStatement().getConnection().close();
			return list;
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}

}
